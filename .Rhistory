geom_point() +
geom_line(size = 1.5) +
theme_bw()
ggplot(use_by_gender,
aes(x = fecha_arribo, y = n,
group = genero_usuario, color = genero_usuario)) +
geom_point() +
geom_line(size = 1.5) +
theme_bw()
ggplot(use_by_gender,
aes(x = fecha_arribo, y = n,
group = genero_usuario, color = genero_usuario)) +
geom_point() +
geom_line(size = 1.5) +
theme_bw()
ggplot(use_by_gender,
aes(x = fecha_arribo, y = n,
group = genero_usuario, color = genero_usuario)) +
geom_point() +
geom_line(size = 1.5) +
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, color = genero_usuario)) +
geom_point() +
geom_line(size = 1.5) +
theme_bw() +
geom_tile("")
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, color = genero_usuario)) +
geom_point() +
geom_line(size = 1.5) +
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, color = genero_usuario)) +
geom_bar(size = 1.5, position = "dodge") +
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, color = genero_usuario)) +
geom_bar(position = "dodge") +
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, color = genero_usuario)) +
geom_bar(stat="identity", position = "dodge") +
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "dodge") +
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario, color = "black")) +
geom_bar(stat="identity", position = "stack") +
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario),  color = "black") +
geom_bar(stat="identity", position = "stack") +
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="") +
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="") +
theme(axis.title.y = "")
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="") +
theme(axis.title.y = element_blank())
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="") +
theme(axis.title.y = element_blank(),
axis.ticks.length.y = 5)
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="") +
theme(axis.title.y = element_blank())
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="") +
theme(axis.title.y = element_blank()) +
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar( position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="") +
theme(axis.title.y = element_blank()) +
theme_bw()
use_by_gender_per <- ecodata |>
group_by(genero_usuario, fecha_arribo) |>
summarise(n = n(), .groups = "drop") |>
group_by(fecha_arribo) |>
mutate(freq = (n / sum(n))) |>
arrange(fecha_arribo) |>
select(-n)
knitr::kable(use_by_gender_per |>
mutate(freq = sprintf("%1.2f%%", freq*100)) |> spread(fecha_arribo, freq))
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="") +
theme(axis.title.y = element_blank()) +
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="") +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()) +
theme_bw()
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="") +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()) +
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="") +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
use_by_gender_per <- ecodata |>
group_by(genero_usuario, fecha_arribo) |>
summarise(n = n(), .groups = "drop") |>
group_by(fecha_arribo) |>
mutate(freq = (n / sum(n))) |>
arrange(fecha_arribo) |>
select(-n)
knitr::kable(use_by_gender_per |>
mutate(freq = sprintf("%1.2f%%", freq*100)) |> spread(fecha_arribo, freq))
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="") +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="",
fill = "Gpenero") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
ggplot(use_by_gender_per,
aes(x = fecha_arribo, y = freq,
group = genero_usuario, fill = genero_usuario)) +
geom_bar(stat="identity", position = "stack") +
labs(title="Porcentage de uso por género",
subtitle="",
caption="",
fill = "Género") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
ggplot(use_by_gender_per) +
geom_density(aes(x = freq), alpha=0.8) +
labs(title="Density plot",
subtitle="City Mileage Grouped by Number of cylinders",
caption="Source: mpg")
ggplot(use_by_gender_per) +
geom_density(aes(x = freq, fill = genero_usuario), alpha=0.8) +
labs(title="Density plot",
subtitle="City Mileage Grouped by Number of cylinders",
caption="Source: mpg")
ggplot(use_by_gender_per) +
geom_density(aes(x = freq, fill = genero_usuario), alpha=0.8) +
facet_grid(~genero_usuario)
ggplot(use_by_gender_per) +
geom_density(aes(x = freq, fill = genero_usuario), alpha=0.8) +
facet_grid(~genero_usuario, scales = "free")
ggplot(use_by_gender_per) +
geom_density(aes(x = freq, fill = genero_usuario), alpha=0.8) +
facet_grid(~genero_usuario, scales = "free") +
labs(title="Densidad del porcentage de uso por género",
subtitle="",
caption="",
fill = "Género")+
theme_bw() +
theme(axis.title.x = element_blank())
use_by_gender_per |> filter(genero_usuario == "F")
use_by_gender_per |> filter(genero_usuario == "F") |> summarise(mean(freq))
use_by_gender_per |> filter(genero_usuario == "F") |> summarise(mean(freq), .groups = "drop")
use_by_gender_per |> filter(genero_usuario == "F", .groups = "drop") |> summarise(mean(freq))
use_by_gender_per |> filter(genero_usuario == "F") |> ungroup() |> summarise(mean(freq))
ggplot(use_by_gender_per) +
geom_density(aes(x = freq, fill = genero_usuario), alpha=.7) +
facet_grid(~genero_usuario, scales = "free") +
labs(title="Densidad del porcentage de uso por género",
subtitle="",
caption="",
fill = "Género")+
theme_bw() +
theme(axis.title.x = element_blank())
ggplot(use_by_gender_per) +
geom_density(aes(x = freq, fill = genero_usuario), alpha=.7) +
geom_vline(xintercept = female)+
facet_grid(~genero_usuario, scales = "free") +
labs(title="Densidad del porcentage de uso por género",
subtitle="",
caption="",
fill = "Género")+
theme_bw() +
theme(axis.title.x = element_blank())
ggplot(use_by_gender_per) +
geom_density(aes(x = freq, fill = genero_usuario), alpha=.7) +
facet_grid(~genero_usuario, scales = "free") +
labs(title="Densidad del porcentage de uso por género",
subtitle="",
caption="",
fill = "Género")+
theme_bw() +
theme(axis.title.x = element_blank())
install.packages("prettydoc")
Sys.Date()
use_by_gender <- ecodata |>
group_by(genero_usuario, fecha_arribo) |>
summarise(n = n(), .groups = "drop") |>
#mutate(freq = n / sum(n)) |>
arrange(fecha_arribo)
knitr::kable(use_by_gender |>  spread(fecha_arribo, n))
use_by_gender <- ecodata |>
group_by(genero_usuario, fecha_arribo) |>
summarise(n = n(), .groups = "drop") |>
#mutate(freq = n / sum(n)) |>
arrange(fecha_arribo)
knitr::kable(use_by_gender |>  spread(fecha_arribo, n)) |>
kable_styling(full_width = F)
library(kableExtra)
install.packages("kableExtra")
use_by_gender <- ecodata |>
group_by(genero_usuario, fecha_arribo) |>
summarise(n = n(), .groups = "drop") |>
#mutate(freq = n / sum(n)) |>
arrange(fecha_arribo)
knitr::kable(use_by_gender |>  spread(fecha_arribo, n)) |>
kable_styling(full_width = F)
library(knitr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(ggthemes)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
load('../../Ecobici_filtered.Rda')
# ecodata <- Ecobici$ecodata
# ecodata <- ecodata[1:100000, ]
use_by_gender <- ecodata |>
group_by(genero_usuario, fecha_arribo) |>
summarise(n = n(), .groups = "drop") |>
#mutate(freq = n / sum(n)) |>
arrange(fecha_arribo)
knitr::kable(use_by_gender |>  spread(fecha_arribo, n)) |>
kable_styling(full_width = F)
use_by_gender <- ecodata |>
group_by(genero_usuario, fecha_arribo) |>
summarise(n = n(), .groups = "drop") |>
#mutate(freq = n / sum(n)) |>
arrange(fecha_arribo)
knitr::kable(use_by_gender |>  spread(fecha_arribo, n),
table.attr = "style='width:30%;'") |>
kable_styling()
use_by_gender <- ecodata |>
group_by(genero_usuario, fecha_arribo) |>
summarise(n = n(), .groups = "drop") |>
#mutate(freq = n / sum(n)) |>
arrange(fecha_arribo)
knitr::kable(use_by_gender |>  spread(fecha_arribo, n),
table.attr = "style='width:30%;'") |>
kable_styling()
Ecobici <- CleanFormat(Ecobici)
devtools::load_all(".")
Ecobici <- CleanFormat(Ecobici)
#Ecobici <- ValidateInput(Ecobici)
Ecobici <- TransformData(Ecobici)
load("../../Ecobici.Rda")
Ecobici <- ReadFiles(path_file = "./extdata/dataEcobici/")
Ecobici <- CleanFormat(Ecobici)
#Ecobici <- ValidateInput(Ecobici)
Ecobici <- TransformData(Ecobici)
#Ecobici <- ValidateInput(Ecobici)
Ecobici <- TransformData(Ecobici)
ecodata <- Ecobici$ecodata
View(ecodata)
View(ecodata)
ecodata |>
mutate(tiempo_uso = hora_arribo - hora_retiro)
str(ecodata)
View(ecodata)
ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%Y-%m-%d")
View(ecodata)
ecodata <- Ecobici$ecodata
ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d-%m-%Y")
ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y")
ecodata <- Ecobici$ecodata
ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y")
View(ecodata)
View(ecodata)
str(ecodata)
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y")
View(ecodata)
ecodata <- Ecobici$ecodata
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate(fecha = format(fecha_arribo,  "%Y-%m"))
View(ecodata)
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate_at(vars(hora_arribo, hora_retiro), as.POSIXct)|>
mutate(fecha = format(fecha_arribo,  "%Y-%m")) |>
mutate(tiempo_uso = hora_arribo - hora_retiro)
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate_at(vars(hora_arribo, hora_retiro), as.POSIXct, format = "%H")|>
mutate(fecha = format(fecha_arribo,  "%Y-%m")) |>
mutate(tiempo_uso = hora_arribo - hora_retiro)
View(ecodata)
ecodata <- Ecobici$ecodata
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate_at(vars(hora_arribo, hora_retiro), as.POSIXct, format = "%H:%M:%S")|>
mutate(fecha = format(fecha_arribo,  "%Y-%m")) |>
mutate(tiempo_uso = hora_arribo - hora_retiro)
View(ecodata)
ecodata <- Ecobici$ecodata
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate_at(vars(hora_arribo, hora_retiro), as.POSIXct, format = "%H:%M:%S")|>
mutate(vars(hora_arribo, hora_retiro), as.numeric, units = "mins")
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate_at(vars(hora_arribo, hora_retiro), as.POSIXct, format = ":%H:%M:%S")#|>
ecodata <- Ecobici$ecodata
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate_at(vars(hora_arribo, hora_retiro), as.POSIXct, format = ":%H:%M:%S")#|>
View(ecodata)
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate_at(vars(hora_arribo, hora_retiro), ISOdate, format = "%H:%M:%S")#|>
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate_at(vars(hora_arribo, hora_retiro), ISOdate)#|>
install.packages('chron')
#Ecobici <- ValidateInput(Ecobici)
Ecobici <- TransformData(Ecobici)
ecodata <- Ecobici$ecodata
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate_at(vars(hora_arribo, hora_retiro), ISOdate, format = "%H:%M:%S")#|>
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate_at(vars(hora_arribo, hora_retiro), chron)#|>
library(chron)
ecodata <- Ecobici$ecodata
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate_at(vars(hora_arribo, hora_retiro), chron)#|>
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate_at(vars(hora_arribo, hora_retiro), chron, format = c(times = "h:m:s"))#|>
ecodata <- Ecobici$ecodata
View(ecodata)
as.POSIXct("0:05:06",format="%H:%M:%S",tz=Sys.timezone())
lubridate::hms("0:05:06")
lubridate::hms("0:05:06") - lubridate::hms("0:07:09")
library(lubridate)
ecodata <- Ecobici$ecodata
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate(fecha = format(fecha_arribo,  "%Y-%m")) |>
mutate_at(vars(hora_arribo, hora_retiro), hms) |>
mutate(tiempo_uso = hora_arribo - hora_retiro)
View(ecodata)
hms("14:05:05")
hms("14:05:05") |> mins()
hms("14:05:05") |> minute()
hms("14:05:05") |> dminutes()
hms("14:05:05") |> minutes()
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate(fecha = format(fecha_arribo,  "%Y-%m")) |>
mutate_at(vars(hora_arribo, hora_retiro), hms) |>
mutate(tiempo_uso = minutes(hora_retiro)- minutes(hora_arribo))
ecodata <- Ecobici$ecodata
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate(fecha = format(fecha_arribo,  "%Y-%m")) |>
mutate_at(vars(hora_arribo, hora_retiro), hms) |>
mutate(tiempo_uso = minutes(hora_retiro)- minutes(hora_arribo))
View(ecodata)
ecodata <- Ecobici$ecodata
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate(fecha = format(fecha_arribo,  "%Y-%m")) |>
mutate_at(vars(hora_arribo, hora_retiro), hms) |>
mutate(tiempo_uso = minutes(hora_arribo)- minutes(hora_retiro))
View(ecodata)
minutes("13M 0S")
minutes("00:12:12")
minutes(hms("00:12:12"))
minutes(hms("00:17:12"))
hours(hms("00:17:12"))
strptime("00:17:12","%H:%M:%S")
diff(strptime("00:17:12","%H:%M:%S"), strptime("00:20:12","%H:%M:%S"))
difftime(strptime("00:17:12","%H:%M:%S"), strptime("00:20:12","%H:%M:%S"))
difftime(strptime("00:17:12","%H:%M:%S"), strptime("00:20:12","%H:%M:%S")) |> as.numeric()
help("difftime")
ecodata <- Ecobici$ecodata
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate(fecha = format(fecha_arribo,  "%Y-%m")) |>
mutate(tiempo_uso = difftime(strptime(hora_arribo, "%H:%M:%S"),
strptime(hora_retiro, "%H:%M:%S"),
units = "mins"))
View(ecodata)
ecodata <- Ecobici$ecodata
ecodata <- ecodata |>
mutate_at(vars(fecha_arribo, fecha_retiro), as.Date, format="%d/%m/%Y") |>
mutate(fecha = format(fecha_arribo,  "%Y-%m")) |>
mutate(tiempo_uso = difftime(strptime(hora_arribo, "%H:%M:%S"),
strptime(hora_retiro, "%H:%M:%S"),
units = "mins") |> as.numeric())
View(ecodata)
Ecobici <- CleanFormat(Ecobici)
devtools::load_all(".")
Ecobici <- ReadFiles(path_file = "./extdata/dataEcobici/")
Ecobici <- CleanFormat(Ecobici)
#Ecobici <- ValidateInput(Ecobici)
Ecobici <- TransformData(Ecobici)
